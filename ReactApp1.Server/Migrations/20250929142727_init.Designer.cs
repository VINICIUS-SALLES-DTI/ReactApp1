// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReactApp1.Server.Apresentacao.Dependencias;

#nullable disable

namespace ReactApp1.Server.Migrations
{
    [DbContext(typeof(SuperMixDbContext))]
    [Migration("20250929142727_init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReactApp1.Server.Apresentacao.Dependencias.Persistencia.Entidades.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponivel")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("ReactApp1.Server.Apresentacao.Dependencias.Persistencia.Entidades.Traco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ResistenciaFck")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Slump")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Tracos");
                });

            modelBuilder.Entity("ReactApp1.Server.Apresentacao.Dependencias.Persistencia.Entidades.TracoMaterial", b =>
                {
                    b.Property<int>("TracoId")
                        .HasColumnType("integer");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TracoId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("TracoMateriais");
                });

            modelBuilder.Entity("ReactApp1.Server.Apresentacao.Dependencias.Persistencia.Entidades.TracoMaterial", b =>
                {
                    b.HasOne("ReactApp1.Server.Apresentacao.Dependencias.Persistencia.Entidades.Material", "Material")
                        .WithMany("TracoMateriais")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReactApp1.Server.Apresentacao.Dependencias.Persistencia.Entidades.Traco", "Traco")
                        .WithMany("TracoMateriais")
                        .HasForeignKey("TracoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Traco");
                });

            modelBuilder.Entity("ReactApp1.Server.Apresentacao.Dependencias.Persistencia.Entidades.Material", b =>
                {
                    b.Navigation("TracoMateriais");
                });

            modelBuilder.Entity("ReactApp1.Server.Apresentacao.Dependencias.Persistencia.Entidades.Traco", b =>
                {
                    b.Navigation("TracoMateriais");
                });
#pragma warning restore 612, 618
        }
    }
}
